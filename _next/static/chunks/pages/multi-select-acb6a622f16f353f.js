(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8439],{47251:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return g}});var o=t(394),i=t(26109),l=t(2784),r=t(6353),a=t(962),s=t(39971),c=t(81108),u=t(77949),p=t(95235),d=t(36858),h=t(52322);function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}var v=[{name:"action",types:"SelectAction",description:"Action option displayed at the end of the list."},{name:"autoComplete",defaultValue:"off",types:"string",description:"Set the autoComplete property for the input."},{name:"description",types:"string | FormControlDescription",description:"Append a description to the select field."},{name:"disabled",defaultValue:"false",types:"boolean",description:(0,h.jsxs)(h.Fragment,{children:["Disables the ",(0,h.jsx)(r.E,{children:"MultiSelect"})," component."]})},{name:"error",types:"string",description:"Displays a form error around the field."},{name:"filterable",types:"boolean",defaultValue:"true",description:(0,h.jsxs)(h.Fragment,{children:["Allows you to filter the ",(0,h.jsx)(r.E,{children:"SelectOptions"})," in the ",(0,h.jsx)(r.E,{children:"MultiSelect"}),"."]})},{name:"inputRef",types:"React.Ref<HTMLInputElement> | React.RefObject<HTMLInputElement>",description:(0,h.jsxs)(h.Fragment,{children:["The provided ref will be used for the underlying input element used in the"," ",(0,h.jsx)(r.E,{children:"MultiSelect"}),"."]})},{name:"label",types:["string","FormControlLabel"],description:"Adds a label to the field."},{name:"labelId",types:"string",description:"Adds a custom id to the label."},{name:"maxHeight",types:"number",defaultValue:"250",description:(0,h.jsxs)(h.Fragment,{children:["Sets a ",(0,h.jsx)(r.E,{children:"max-height"})," to the dropdown."]})},{name:"onClose",types:"() => void",description:"Function that will be called when the MultiSelect is closed."},{name:"onOpen",types:"() => void",description:"Function that will be called when the MultiSelect is opened."},{name:"onOptionsChange",types:"(value: [any], option: [SelectOption]) => void",required:!0,description:"Callback called with value of selected option."},{name:"options",types:"Array<SelectOption> | Array<SelectOptionGroup>",required:!0,description:(0,h.jsxs)(h.Fragment,{children:["Accepts an array of ",(0,h.jsx)(r.E,{children:"SelectOption"})," or an array of ",(0,h.jsx)(r.E,{children:"SelectOptionGroups"}),". See example for usage."]})},{name:"placement",types:["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],defaultValue:"bottom-start",description:"Determines the location in which the dropdown will be placed."},{name:"positionFixed",defaultValue:"false",types:"boolean",description:(0,h.jsxs)(h.Fragment,{children:["If set, uses ",(0,h.jsx)(r.E,{children:"position: fixed"})," instead of ",(0,h.jsx)(r.E,{children:"position: absolute"})," to position the items."]})},{name:"required",types:"boolean",description:"Sets the field as required."},{name:"value",types:"[any]",description:(0,h.jsx)(h.Fragment,{children:"Modifies the current selected value of the field."})}],x=function(e){return(0,h.jsx)(d.n,function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){(0,p.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({propList:v,title:"MultiSelect"},e))},f=t(40150),g=function(){return(0,h.jsxs)(h.Fragment,{children:[(0,h.jsx)(o.H1,{children:"MultiSelect"}),(0,h.jsxs)(i.s,{header:"Overview",headerId:"overview",children:[(0,h.jsxs)(o.xv,{children:[(0,h.jsx)(r.E,{primary:!0,children:"MultiSelects"})," allow users to select multiple items within a list of options."]}),(0,h.jsx)(o.xv,{bold:!0,children:"When to use:"}),(0,h.jsxs)(a.a,{children:[(0,h.jsx)(a.a.Item,{children:"To select multiple options within a list, usually of related or grouped items."}),(0,h.jsx)(a.a.Item,{children:"To select four or more predefined selections."})]})]}),(0,h.jsx)(i.s,{header:"Implementation",headerId:"implementation",children:(0,h.jsx)(s.F,{id:"implementation",routes:[{id:"basic",title:"Basic",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:[(0,h.jsx)(r.E,{primary:!0,children:"MultiSelects"})," are typeable inputs with multiple selectable items within a dropdown."]}),(0,h.jsx)(c.G,{children:"function Example() {\n  const [value, setValue] = useState(['mx']);\n  const handleChange = (val) => setValue(val);\n\n  return (\n    <Form>\n      <FormGroup>\n        <MultiSelect\n          action={{\n            actionType: 'destructive' as const,\n            content: 'Remove Country',\n            icon: <DeleteIcon />,\n            onActionClick: () => null,\n          }}\n          filterable={true}\n          label=\"Countries\"\n          maxHeight={300}\n          onOptionsChange={handleChange}\n          options={[\n            { value: 'us', content: 'United States' },\n            { value: 'mx', content: 'Mexico' },\n            { value: 'ca', content: 'Canada' },\n            { value: 'en', content: 'England' },\n            { value: 'fr', content: 'France' },\n            { value: 'gr', content: 'Germany' },\n            { value: 'ar', content: 'Argentina' },\n            { value: 'ru', content: 'Russia', disabled: true },\n            { value: 'ch', content: 'Chile' },\n            { value: 'bo', content: 'Bolivia' },\n            { value: 'jp', content: 'Japan' },\n            { value: 'cn', content: 'China' },\n            { value: 'sk', content: 'South Korea' },\n            { value: 'au', content: 'Australia' },\n            { value: 'ug', content: 'Uganda' },\n          ]}\n          placeholder={'Choose country'}\n          placement={'bottom-start'}\n          required\n          value={value}\n        />\n      </FormGroup>\n    </Form>\n  );\n}"})]},"basic")}},{id:"position",title:"Position",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:[(0,h.jsx)(r.E,{primary:!0,children:"MultiSelect"})," can be anchored in different directions with the ",(0,h.jsx)(r.E,{primary:!0,children:"placement"})," property. It will automatically find a position if there's not enough space in the chosen direction."]}),(0,h.jsx)(c.G,{children:"<Grid gridColumns=\"repeat(4, 1fr)\">\n  <MultiSelect\n    label=\"Select\"\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n    ]}\n    placeholder=\"Choose from above\"\n    placement=\"top\"\n    required\n  />\n  <MultiSelect\n    label=\"Select\"\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n    ]}\n    placeholder=\"Choose from below\"\n    placement=\"bottom-start\"\n    required\n  />\n  <MultiSelect\n    label=\"Select\"\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n    ]}\n    placeholder=\"Choose from the right\"\n    placement=\"right-start\"\n    required\n  />\n  <MultiSelect\n    label=\"Select\"\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n    ]}\n    placeholder=\"Choose from the left\"\n    placement=\"left-end\"\n    required\n  />\n</Grid>"})]},"position")}},{id:"max-height",title:"Max height",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:["Once the content is longer than the max-height, the dropdown will be scrollable. It is possible to modify the dimension by passing a"," ",(0,h.jsx)(r.E,{primary:!0,children:"maxHeight"})," property."]}),(0,h.jsx)(c.G,{children:"<Grid gridColumns=\"repeat(3, 1fr)\">\n  <MultiSelect\n    label=\"Select\"\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n      { value: 5, content: 'Option' },\n      { value: 6, content: 'Option' },\n      { value: 7, content: 'Option' },\n      { value: 8, content: 'Option' },\n    ]}\n    placeholder=\"Default\"\n    required\n  />\n  <MultiSelect\n    label=\"Select\"\n    maxHeight={150}\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n      { value: 5, content: 'Option' },\n      { value: 6, content: 'Option' },\n      { value: 7, content: 'Option' },\n      { value: 8, content: 'Option' },\n    ]}\n    placeholder=\"Smaller\"\n    required\n  />\n  <MultiSelect\n    label=\"Select\"\n    maxHeight={350}\n    onOptionsChange={() => null}\n    options={[\n      { value: 1, content: 'Option' },\n      { value: 2, content: 'Option' },\n      { value: 3, content: 'Option' },\n      { value: 4, content: 'Option' },\n      { value: 5, content: 'Option' },\n      { value: 6, content: 'Option' },\n      { value: 7, content: 'Option' },\n      { value: 8, content: 'Option' },\n      { value: 9, content: 'Option' },\n      { value: 10, content: 'Option' },\n      { value: 11, content: 'Option' },\n      { value: 12, content: 'Option' },\n    ]}\n    placeholder=\"Larger\"\n    required\n  />\n</Grid>"})]},"max-height")}},{id:"disabled",title:"Disabled",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:["It is possible to disable the entire select component, similar to how you would disable a native HTML select element, by using the ",(0,h.jsx)(r.E,{primary:!0,children:"disabled"})," ","property."]}),(0,h.jsx)(c.G,{children:"<Form>\n  <FormGroup>\n    <MultiSelect\n      disabled\n      label=\"Select\"\n      maxHeight={350}\n      onOptionsChange={() => null}\n      options={[\n        { value: 1, content: 'Option' },\n        { value: 2, content: 'Option' },\n        { value: 3, content: 'Option' },\n        { value: 4, content: 'Option' },\n      ]}\n      placeholder=\"Larger\"\n      required\n    />\n  </FormGroup>\n</Form>\n"})]},"disabled")}},{id:"actions",title:"Actions",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:["Accepts an ",(0,h.jsx)(r.E,{children:"action"})," object to display at the end of the list."]}),(0,h.jsx)(c.G,{children:"<Form>\n  <FormGroup>\n    <MultiSelect\n      action={{\n        actionType: 'destructive',\n        content: 'Remove Country',\n        icon: <DeleteIcon />,\n        onActionClick: () => null,\n      }}\n      label=\"Countries\"\n      onOptionsChange={() => null}\n      options={[\n        { value: 'us', content: 'United States' },\n        { value: 'mx', content: 'Mexico' },\n        { value: 'ca', content: 'Canada' },\n        { value: 'en', content: 'England' },\n      ]}\n      placeholder={'Choose country'}\n      placement={'bottom-start'}\n      required\n    />\n  </FormGroup>\n</Form>"})]},"actions")}},{id:"error",title:"Error",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:["An ",(0,h.jsx)(r.E,{primary:!0,children:"error"})," prop receives a ",(0,h.jsx)(r.E,{children:"string"})," to display."]}),(0,h.jsx)(c.G,{children:"<Form>\n  <FormGroup>\n    <MultiSelect\n      error=\"Need to choose a country before proceeding\"\n      label=\"Countries\"\n      onOptionsChange={() => null}\n      options={[\n        { value: 'us', content: 'United States' },\n        { value: 'mx', content: 'Mexico' },\n        { value: 'ca', content: 'Canada' },\n        { value: 'en', content: 'England' },\n      ]}\n      placeholder={'Choose country'}\n      placement={'bottom-start'}\n      required\n    />\n  </FormGroup>\n</Form>"})]},"error")}},{id:"multi-select-groups",title:"Multi select groups",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsxs)(o.xv,{children:["It is possible to create grouped options with labels with a"," ",(0,h.jsx)(r.E,{primary:!0,children:"Select Group"})," by passing ",(0,h.jsx)(r.E,{primary:!0,children:"label"})," and"," ",(0,h.jsx)(r.E,{primary:!0,children:"options"})," to the top-level ",(0,h.jsx)(r.E,{primary:!0,children:"options"})," ","property."]}),(0,h.jsx)(c.G,{children:"<Form>\n  <FormGroup>\n    <MultiSelect\n      filterable\n      label=\"My Options\"\n      onOptionsChange={() => null}\n      options={[\n        {\n          label: 'Group 1',\n          options: [\n            { value: 'mx', content: 'Mexico' },\n            { value: 'ca', content: 'Canada' },\n            { value: 'en', content: 'England' },\n          ],\n        },\n        {\n          label: 'Group 2',\n          options: [\n            { value: 'fr', content: 'France' },\n            { value: 'gr', content: 'Germany' },\n            { value: 'ar', content: 'Argentina' },\n          ],\n        },\n      ]}\n    />\n  </FormGroup>\n</Form>"})]},"multi-select-groups")}},{id:"description",title:"Description",render:function(){return(0,h.jsxs)(l.Fragment,{children:[(0,h.jsx)(o.xv,{children:"It is possible to add a description for select options and actions."}),(0,h.jsx)(c.G,{children:"function Example() {\n  const [value, setValue] = useState([1]);\n  const handleChange = (val) => setValue(val);\n\n  return (\n    <Form>\n      <FormGroup>\n        <MultiSelect\n          action={{\n            actionType: 'destructive',\n            content: 'Remove',\n            description: 'Description for remove action',\n            icon: <DeleteIcon />,\n            onActionClick: () => null,\n          }}\n          label=\"Select\"\n          onOptionsChange={handleChange}\n          options={[\n            {\n              value: 1,\n              content: 'Option #1',\n              description: 'Description for option #1',\n            },\n            {\n              value: 2,\n              content: 'Option #2',\n              description: 'Description for option #2',\n              disabled: true,\n            },\n            { value: 3, content: 'Option #3' },\n            { value: 4, content: 'Option #4' },\n            { value: 5, content: 'Option #5' },\n          ]}\n          placeholder=\"Choose option\"\n          required\n          value={value}\n        />\n      </FormGroup>\n    </Form>\n  );\n}"})]},"description")}}]})}),(0,h.jsx)(i.s,{header:"Props",headerId:"props",children:(0,h.jsx)(s.F,{id:"props",routes:[{id:"multi-select",title:"MultiSelect",render:function(){return(0,h.jsx)(x,{})}},{id:"select-option",title:"SelectOption",render:function(){return(0,h.jsx)(f.Kl,{})}},{id:"select-action",title:"SelectAction",render:function(){return(0,h.jsx)(f.Pr,{})}}]})}),(0,h.jsx)(i.s,{header:"Do's and Don'ts",headerId:"guidelines",children:(0,h.jsx)(u.t,{discouraged:[(0,h.jsxs)(h.Fragment,{children:["Avoid using a ",(0,h.jsx)(r.E,{primary:!0,children:"MultiSelect"})," if there are less than three options provided in the dropdown."]})],recommended:[(0,h.jsx)(h.Fragment,{children:"Have a default selection whenever possible. If there\u2019s no logical default, leverage placeholder text."}),(0,h.jsx)(h.Fragment,{children:"Sort the list of options in a way that makes the most sense to users."}),(0,h.jsx)(h.Fragment,{children:"Provide the ability to search when there is a use case for particular choices."})]})})]})}},19924:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/multi-select",function(){return t(47251)}])}},function(e){e.O(0,[9961,5713,2859,777,6139,494,2561,3614,1108,1999,9774,2888,179],(function(){return n=19924,e(e.s=n);var n}));var n=e.O();_N_E=n}]);